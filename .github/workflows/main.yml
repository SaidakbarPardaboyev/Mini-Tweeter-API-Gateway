name: Deploy to Server

on:
  push:
    branches:
      - master   # Production deployment
      - develop  # Staging deployment

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker BuildKit
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache \
                               --cache-from=type=local,src=/tmp/.buildx-cache \
                               -t ghcr.io/${{ env.REPO_NAME }}/app:latest \
                               --push .
          else
            docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache \
                               --cache-from=type=local,src=/tmp/.buildx-cache \
                               -t ghcr.io/${{ env.REPO_NAME }}/app:develop \
                               --push .
          fi

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')
            docker login ghcr.io -u "${{ github.actor }}" --password "${{ secrets.GHCR_PAT }}"
            
            # Ensure we are inside the correct directory
            cd ~/Mini-Tweeter-API-Gateway

            if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
              # Production Deployment
              git pull origin master
              docker-compose -f docker-compose.production.yml up -d --force-recreate --no-deps
            else
              # Staging Deployment
              git pull origin develop
              docker-compose -f docker-compose.staging.yml up -d --force-recreate --no-deps
            fi

            # Pull the latest image
            docker pull ghcr.io/${REPO_NAME}/app:latest  # Or :develop based on branch

            # Stop and remove old containers
            docker-compose down --remove-orphans

            # Restart with the latest image
            docker-compose up -d --force-recreate --no-deps

            # Clean up unused Docker resources
            docker system prune -f
