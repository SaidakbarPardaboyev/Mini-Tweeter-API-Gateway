name: Deploy to Server

on:
  push:
    branches:
      - master
      - develop

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker BuildKit
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Determine Image Tag
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "IMAGE_TAG=production" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=develop" >> $GITHUB_ENV
          fi

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache \
                             --cache-from=type=local,src=/tmp/.buildx-cache \
                             -t ghcr.io/${{ env.REPO_NAME }}/app:${{ env.IMAGE_TAG }} \
                             --push .

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')

            docker login ghcr.io -u "${{ github.actor }}" --password "${{ secrets.GHCR_PAT }}"

            # ðŸ”¹ Determine deployment environment
            if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
              echo "Deploying production..."
              BRANCH="master"
              IMAGE_TAG="production"
              COMPOSE_FILE="docker-compose.production.yml"
            else
              echo "Deploying staging..."
              BRANCH="develop"
              IMAGE_TAG="develop"
              COMPOSE_FILE="docker-compose.staging.yml"
            fi

            # ðŸ”¹ Navigate to project directory
            cd ~/Mini-Tweeter-API-Gateway

            # ðŸ”¹ Pull the latest code
            git pull origin $BRANCH

            # ðŸ”¹ Pull the latest Docker image
            docker pull ghcr.io/${REPO_NAME}/app:$IMAGE_TAG

            # ðŸ”¹ Stop and remove old containers
            docker-compose -f $COMPOSE_FILE down --remove-orphans

            # ðŸ”¹ Start updated containers
            docker-compose -f $COMPOSE_FILE up -d --force-recreate --no-deps

            # ðŸ”¹ Clean up unused Docker resources
            docker system prune -f
