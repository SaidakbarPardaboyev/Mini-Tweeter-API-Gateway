name: Deploy to Server

on:
  push:
    branches:
      - master
      - develop

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')
            BRANCH_NAME=$(echo "${GITHUB_REF}" | awk -F'/' '{print $NF}')

            # Set the correct directory
            if [[ "$BRANCH_NAME" == "master" ]]; then
              DEPLOY_DIR=~/Mini-Tweeter/api-gateway/production
            elif [[ "$BRANCH_NAME" == "develop" ]]; then
              DEPLOY_DIR=~/Mini-Tweeter/api-gateway/staging
            else
              echo "Not a deployment branch. Skipping deployment."
              exit 0
            fi

            # Ensure the directory exists
            if [ ! -d "$DEPLOY_DIR" ]; then
              echo "Cloning repository for the first time..."
              git clone -b $BRANCH_NAME https://github.com/${{ github.repository }}.git $DEPLOY_DIR
            fi

            cd $DEPLOY_DIR
            git reset --hard
            git pull origin $BRANCH_NAME

            # Ensure correct Dockerfile is present
            if [ ! -f "Dockerfile" ]; then
              echo "Error: Dockerfile not found!"
              exit 1
            fi

            # Stop and rebuild the container
            docker-compose -f docker-compose.${BRANCH_NAME}.yml down
            docker-compose -f docker-compose.${BRANCH_NAME}.yml build --no-cache
            docker-compose -f docker-compose.${BRANCH_NAME}.yml up -d --force-recreate --no-deps

            # Cleanup unused images
            docker system prune -f